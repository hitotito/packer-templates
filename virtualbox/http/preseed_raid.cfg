### Vagrant preconfiguration File (Debian 9 Stetech)
### Last Edited: 2018-JUN-29 tosh
### Localization
d-i debian-installer/locale string en_US

# Keyboard selection.
d-i keyboard-configuration/xkb-keymap select us

### Network configuration
# Disable network configuration entirely
#d-i netctf/enable boolean false

# Select interface with link
d-i netcfg/choose_interface select auto

# To pick a particular interface instead:
#d-i netcfg/choose_interface select eth1

# If you have a slow dhcp server and the installer times out waiting for
# it, this might be useful.
#d-i netcfg/dhcp_timeout string 60

# If you prefer to configure the network manually, uncomment this line and
# the static network configuration below.
#d-i netcfg/disable_dhcp boolean true

# If you want the preconfiguration file to work on systems both with and
# without a dhcp server, uncomment these lines and the static network
# configuration below.
#d-i netcfg/dhcp_failed note
#d-i netcfg/dhcp_options select Configure network manually

# Static network configuration.
#d-i netcfg/get_nameservers string 192.168.1.1
#d-i netcfg/get_ipaddress string 192.168.1.42
#d-i netcfg/get_netmask string 255.255.255.0
#d-i netcfg/get_gateway string 192.168.1.1
#d-i netcfg/confirm_static boolean true

# Hostname and Domain name
# hostname is pass in via packer
#d-i netcfg/get_hostname string <from_kernel_param>
d-i netcfg/get_domain string hitotito.com

# Force hostname
d-i netctf/hostname string smbtvdeb9

# Disable that annoying WEP key dialog.
d-i netcfg/wireless_wep string

### Mirror settings
# If you select ftp, the mirror/country string does not need to be set.
#d-i mirror/protocol string ftp
d-i mirror/country string manual
d-i mirror/http/hostname string http.us.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

### Account setup
#d-i passwd/make-user boolean false
d-i passwd/root-login boolean false

# Root password, either in clear text
d-i passwd/root-password password vagrant
d-i passwd/root-password-again password vagrant

# To create a normal user account.
d-i passwd/user-fullname string Vagrant User
d-i passwd/username string vagrant
d-i passwd/user-password password vagrant
d-i passwd/user-password-again password vagrant
d-i passwd/user-default-groups string audio cdrom video admin

d-i user-setup/encrypt-home boolean false
d-i user-setup/allow-password-weak boolean true

### Clock and time zone setup
d-i clock-setup/utc boolean true
d-i time/zone string UTC

### NTP
# Controls whether to use NTP to set the clock during the install
d-i clock-setup/ntp boolean true

### Partitioning

# In addition, you'll need to specify the method to use.
# The presently available methods are:
# - regular: use the usual partition types for your architecture
# - lvm:     use LVM to partition the disk
# - crypto:  use LVM within an encrypted partition
d-i partman-auto/method string raid

# Specify the disks to be partitioned. They will all get the same layout,
# so this will only work if the disks are the same size.
#d-i partman-auto/disk string /dev/sda /dev/sdb
d-i partman-auto/disk string /dev/sda /dev/sdb

# Force GPT as the partitioning layout scheme
#d-i partman/choose_label string gpt
#d-i partman/default_label string gpt
#d-i partman-basicfilesystems/choose_label string gpt
#d-i partman-basicfilesystems/default_label string gpt

d-i partman-partitioning/choose_label string gpt
d-i partman-partitioning/default_label string gpt

# make sure nothing asks for confirmation, even when removing old layouts
# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
d-i partman-lvm/device_remove_lvm boolean true
# The same applies to pre-existing software RAID array:
d-i partman-md/device_remove_md boolean true
# And the same goes for the confirmation to write the lvm partitions.
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

# ToDo: check placement
d-i partman-auto/purge_lvm_from_device boolean true

# You can choose one of the three predefined partitioning recipes:
# - atomic: all files in one partition
# - home:   separate /home partition
# - multi:  separate /home, /var, and /tmp partitions
# Using a custom recipe
d-i partman-auto/choose_recipe select vagrant-raid-01

## Partitioning layout [2x 40G block devices required]
# (raid1) 100M /boot
# (raid1)   2G swap
# (raid1)   5G /
# (raid1) rest lvm
#         `-  2G /home
#         `-  5G /srv
#         `-  1G /tmp
#         `-  5G /usr
#         `-  5G /var
d-i partman-auto-lvm/new_vg_name string vg0
d-i partman-auto-lvm/guided_size string 100%

# Next you need to specify the physical partitions that will be used. 
d-i partman-auto/expert_recipe string   \
    vagrant-raid-01 ::                  \
        1 1 1 free                      \
            $gptonly{ }                 \
            $primary{ }                 \
            $bios_boot{ }               \
            method{ biosgrub }          \
            $lvmignore{ }               \
        .                               \
        120 120 120 raid                \
            $gptonly{ }                 \
            $primary{ }                 \
            $bootable{ }                \
            method{ raid }              \
            $lvmignore{ }               \
            options/nodev{ nodev }      \
            options/nodev{ nosuid }     \
        .                               \
        2000 2000 2000 raid             \
            $gptonly{ }                 \
            $primary{ }                 \
            method{ raid }              \
            $lvmignore{ }               \
        .                               \
        10000 10000 10000 raid          \
            $gptonly{ }                 \
            $primary{ }                 \
            method{ raid }              \
            $lvmignore{ }               \
        .                               \
        50000 50000 -1 raid             \
            $gptonly{ }                 \
            $primary{ }                 \
            method{ raid }              \
        .                               \
        10000 10000 10000 xfs           \
            $defaultignore{ }           \
            $lvmok{ }                   \
            lv_name{ lv_home }          \
            method{ format }            \
            format{ }                   \
            use_filesystem{ }           \
            filesystem{ xfs }           \
            mountpoint{ /home }         \
            options/nodev{ nodev }      \
            options/nosuid{ nosuid }    \
        .                               \
        10000 10000 10000 xfs           \
            $defaultignore{ }           \
            $lvmok{ }                   \
            lv_name{ lv_srv }           \
            method{ format }            \
            format{ }                   \
            use_filesystem{ }           \
            filesystem{ xfs }           \
            mountpoint{ /srv }          \
        .                               \
        1000 1000 1000 xfs              \
            $defaultignore{ }           \
            $lvmok{ }                   \
            lv_name{ lv_tmp }           \
            method{ format }            \
            format{ }                   \
            use_filesystem{ }           \
            filesystem{ xfs }           \
            mountpoint{ /tmp }          \
            options/nodev{ nodev }      \
            options/nosuid{ nosuid }    \
        .                               \
        10000 10000 10000 xfs           \
            $defaultignore{ }           \
            $lvmok{ }                   \
            lv_name{ lv_usr }           \
            method{ format }            \
            format{ }                   \
            use_filesystem{ }           \
            filesystem{ xfs }           \
            mountpoint{ /usr }          \
            options/nodev{ nodev }      \
        .                               \
        10000 10000 10000 xfs           \
            $defaultignore{ }           \
            $lvmok{ }                   \
            lv_name{ lv_var }           \
            method{ format }            \
            format{ }                   \
            use_filesystem{ }           \
            filesystem{ xfs }           \
            mountpoint{ /var }          \
            options/nodev{ nodev }      \
        .                               \
        1 100000 -1 xfs                 \
            $defaultignore{ }           \
            $lvmok{ }                   \
            lv_name{ lv_freespace }     \
            method{ keep }              \
        .

# Last you need to specify how the previously defined partitions will be
# used in the RAID setup. Remember to use the correct partition numbers
# for logical partitions. RAID levels 0, 1, 5, 6 and 10 are supported;
# devices are separated using "#".
# Parameters are:
# <raidtype> <devcount> <sparecount> <fstype> <mountpoint> \
#          <devices> <sparedevices>
d-i partman-auto-raid/recipe string     \
    1 2 0 ext4 /boot                    \
        /dev/sda2#/dev/sdb2 .           \
    1 2 0 swap -                        \
        /dev/sda3#/dev/sdb3 .           \
    1 2 0 xfs /                         \
        /dev/sda4#/dev/sdb4 .           \
    1 2 0 lvm -                         \
        /dev/sda5#/dev/sdb5 .

# This makes partman automatically partition without confirmation.
d-i partman-md/confirm boolean true
d-i partman-md/confirm_nooverwrite boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
#d-i partman/choose_partition select Finish partitioning and write changes to disk
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i mdadm/boot_degraded boolean true

# Prevent extra questions to return to the partitioning menu
#partman-basicfilesystems partman-basicfilesystems/no_swap boolean false
#partman-basicfilesystems partman-basicfilesystems/no_mount_point boolean false
#d-i partman-basicfilesystems/no_swap boolean false
#d-i partman-basicfilesystems/no_mount_point boolean false
d-i partman-basicmethods/method_only boolean false

### Base system installation
d-i base-installer/kernel/linux/image string linux-image-amd64

### Apt setup
# You can choose to install non-free and contrib software.
d-i apt-setup/non-free boolean false
d-i apt-setup/contrib boolean false
# Uncomment this if you don't want to use a network mirror.
#d-i apt-setup/use_mirror boolean false
# Select which update services to use; define the mirrors to be used.
# Values shown below are the normal defaults.
#d-i apt-setup/services-select multiselect security, volatile
#d-i apt-setup/security_host string security.debian.org
#d-i apt-setup/volatile_host string volatile.debian.org
d-i apt-setup/use_mirror boolean true
d-i apt-setup/cdrom/set-first boolean false
d-i apt-setup/cdrom/set-next boolean false   
d-i apt-setup/cdrom/set-failed boolean false


# By default the installer requires that repositories be authenticated
# using a known gpg key. This setting can be used to disable that
# authentication. Warning: Insecure, not recommended.
#d-i debian-installer/allow_unauthenticated string true

### Package selection
tasksel tasksel/first multiselect standard
# If the desktop task is selected, install the kde and xfce desktops
# instead of the default gnome desktop.
#tasksel tasksel/desktop multiselect kde, xfce

# Individual additional packages to install
d-i pkgsel/include string openssh-server ntp acpid  sudo bzip2 rsync apache2-utils build-essential curl devscripts htop net-tools tree vim 

# Whether to upgrade packages after debootstrap.
# Allowed values: none, safe-upgrade, full-upgrade
d-i pkgsel/upgrade select none

# Some versions of the installer can report back on what software you have
# installed, and what software you use. The default is not to report back,
# but sending reports helps the project determine what software is most
# popular and include it on CDs.
popularity-contest popularity-contest/participate boolean false

### Boot loader installation
d-i grub-installer/with_other_os boolean true
d-i grub-installer/bootdev string /dev/sda /dev/sdb

### Finishing up the installation
# During installations from serial console, the regular virtual consoles
# (VT1-VT6) are normally disabled in /etc/inittab. Uncomment the next
# line to prevent this.
#d-i finish-install/keep-consoles boolean true

# Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note

# This will prevent the installer from ejecting the CD during the reboot,
# which is useful in some situations.
#d-i cdrom-detect/eject boolean false

# This is how to make the installer shutdown when finished, but not
# reboot into the installed system.
#d-i debian-installer/exit/halt boolean true
# This will power off the machine instead of just halting it.
#d-i debian-installer/exit/poweroff boolean true

### Preseeding other packages
# Depending on what software you choose to install, or if things go wrong
# during the installation process, it's possible that other questions may
# be asked. You can preseed those too, of course. To get a list of every
# possible question that could be asked during an install, do an
# installation, and then run these commands:
#   debconf-get-selections --installer > file
#   debconf-get-selections >> file


#### Advanced options
### Running custom commands during the installation
# d-i preseeding is inherently not secure. Nothing in the installer checks
# for attempts at buffer overflows or other exploits of the values of a
# preconfiguration file like this one. Only use preconfiguration files from
# trusted locations! To drive that home, and because it's generally useful,
# here's a way to run any shell command you'd like inside the installer,
# automatically.

# This first command is run as early as possible, just after
# preseeding is read.
# Prevent packaged version of VirtualBox Guest Additions being installed:
d-i preseed/early_command string sed -i \
        '/in-target/idiscover(){/sbin/discover|grep -v VirtualBox;}' \
        /usr/lib/pre-pkgsel.d/20install-hwpackages

# This command is run just before the install finishes, but when there is
# still a usable /target directory. You can chroot to /target and use it
# directly, or use the apt-install and in-target commands to easily install
    # packages and run commands in the target system.

d-i preseed/late_command string \
        lvremove -f vg0/lv_freespace > /dev/null 2>&1;
